#include <stdio.h>

#define MAX 25

int main() {
    int frag[MAX], b[MAX], f[MAX], i, j, nb, nf, temp, highest;
    int bf[MAX] = {0}, ff[MAX] = {0}; // initializing all to 0

    printf("\n\tMemory Management Scheme - Worst Fit");
    printf("\nEnter the number of blocks: ");
    scanf("%d", &nb);

    printf("Enter the number of files: ");
    scanf("%d", &nf);

    printf("\nEnter the size of the blocks:\n");
    for(i = 0; i < nb; i++) {
        printf("Block %d: ", i + 1);
        scanf("%d", &b[i]);
    }

    printf("\nEnter the size of the files:\n");
    for(i = 0; i < nf; i++) {
        printf("File %d: ", i + 1);
        scanf("%d", &f[i]);
    }

    for(i = 0; i < nf; i++) {
        highest = -1;
        ff[i] = -1;

        for(j = 0; j < nb; j++) {
            if(bf[j] == 0) {
                temp = b[j] - f[i];
                if(temp >= 0 && temp > highest) {
                    ff[i] = j;
                    highest = temp;
                }
            }
        }

        if(ff[i] != -1) {
            frag[i] = b[ff[i]] - f[i];
            bf[ff[i]] = 1;
        } else {
            frag[i] = -1;
        }
    }

    printf("\nFile_no\tFile_size\tBlock_no\tBlock_size\tFragment");
    for(i = 0; i < nf; i++) {
        if(ff[i] != -1) {
            printf("\n%d\t\t%d\t\t%d\t\t%d\t\t%d", i + 1, f[i], ff[i] + 1, b[ff[i]], frag[i]);
        } else {
            printf("\n%d\t\t%d\t\tNot Allocated", i + 1, f[i]);
        }
    }

    return 0;
}


//INPUT
Enter the number of blocks: 3
Enter the number of files: 2
Enter the size of the blocks:-
Block 1: 5
Block 2: 2
Block 3: 7
Enter the size of the files:-
File 1: 1
File 2: 
//output
File No File Size Block No Block Size Fragment
1 1 3 7 6
2 4 1 5 1
